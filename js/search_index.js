var search_data = {"index":{"searchIndex":["kernel","numeric","rexml","child","element","parent","string","xml","mapping","arraynode","booleannode","choicenode","classmethods","classes_by_rootelt_names","hashnode","node","numericnode","objectnode","singleattributenode","noattrvalueset","subobjectbasenode","textnode","mappingerror","xxpath","accessors","attribute","rexml","unspecifiednesssupport","xml","xxpath","rexml","text","xxpatherror","xxpathmethods","==()","add_accessor()","add_node_class()","all()","all_xml_mapping_nodes()","all_xpath()","append_features()","class_and_mapping_for_root_elt_name()","class_for_root_elt_name()","classes_for()","create_classes_for()","create_new()","create_new_xpath()","default_mapping()","default_root_element_name()","default_when_xpath_err()","each()","each_on_axis()","each_on_axis_child()","each_on_axis_descendant()","each_on_axis_self()","each_xpath()","ensure_exists()","extract_attr_value()","fill_from_xml()","fill_into_xml()","fill_into_xml()","fill_into_xml()","first()","first_xpath()","initialize_impl()","initialize_xml_mapping()","is_present_in?()","is_present_in?()","is_present_in?()","load_from_file()","load_from_xml()","load_from_xml()","load_from_xml()","load_object_from_file()","load_object_from_xml()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","obj_initializing()","obj_initializing()","obj_to_xml()","obj_to_xml()","post_load()","post_save()","pre_load()","pre_save()","remove_class()","root_element_name()","save_to_file()","save_to_xml()","set_attr_value()","text()","text()","text()","text=()","to_xxpath()","unspecified=()","unspecified?()","use_mapping()","warn()","xml_mapping_nodes()","xml_to_obj()","xml_to_obj()","readme","todo","xpath_impl_notes","user_manual","user_manual_xxpath"],"longSearchIndex":["kernel","numeric","rexml","rexml::child","rexml::element","rexml::parent","string","xml","xml::mapping","xml::mapping::arraynode","xml::mapping::booleannode","xml::mapping::choicenode","xml::mapping::classmethods","xml::mapping::classes_by_rootelt_names","xml::mapping::hashnode","xml::mapping::node","xml::mapping::numericnode","xml::mapping::objectnode","xml::mapping::singleattributenode","xml::mapping::singleattributenode::noattrvalueset","xml::mapping::subobjectbasenode","xml::mapping::textnode","xml::mappingerror","xml::xxpath","xml::xxpath::accessors","xml::xxpath::accessors::attribute","xml::xxpath::accessors::rexml","xml::xxpath::accessors::unspecifiednesssupport","xml::xxpath::xml","xml::xxpath::xml::xxpath","xml::xxpath::xml::xxpath::rexml","xml::xxpath::xml::xxpath::rexml::text","xml::xxpatherror","xml::xxpathmethods","xml::xxpath::accessors::attribute#==()","xml::mapping::classmethods#add_accessor()","xml::mapping::add_node_class()","xml::xxpath#all()","xml::mapping::classmethods#all_xml_mapping_nodes()","xml::xxpathmethods#all_xpath()","xml::xxpath::accessors::unspecifiednesssupport::append_features()","xml::mapping::class_and_mapping_for_root_elt_name()","xml::mapping::class_for_root_elt_name()","xml::mapping::classes_by_rootelt_names#classes_for()","xml::mapping::classes_by_rootelt_names#create_classes_for()","xml::xxpath#create_new()","xml::xxpathmethods#create_new_xpath()","xml::mapping::classmethods#default_mapping()","xml::mapping::classmethods#default_root_element_name()","xml::mapping::singleattributenode#default_when_xpath_err()","xml::xxpath#each()","rexml::parent#each_on_axis()","rexml::parent#each_on_axis_child()","rexml::parent#each_on_axis_descendant()","rexml::parent#each_on_axis_self()","xml::xxpathmethods#each_xpath()","xml::mapping::classes_by_rootelt_names#ensure_exists()","xml::mapping::singleattributenode#extract_attr_value()","xml::mapping#fill_from_xml()","numeric#fill_into_xml()","string#fill_into_xml()","xml::mapping#fill_into_xml()","xml::xxpath#first()","xml::xxpathmethods#first_xpath()","xml::mapping::singleattributenode#initialize_impl()","xml::mapping#initialize_xml_mapping()","xml::mapping::choicenode#is_present_in?()","xml::mapping::node#is_present_in?()","xml::mapping::singleattributenode#is_present_in?()","xml::mapping::classmethods#load_from_file()","numeric::load_from_xml()","string::load_from_xml()","xml::mapping::classmethods#load_from_xml()","xml::mapping::load_object_from_file()","xml::mapping::load_object_from_xml()","xml::mapping::new()","xml::mapping::arraynode::new()","xml::mapping::booleannode::new()","xml::mapping::choicenode::new()","xml::mapping::hashnode::new()","xml::mapping::node::new()","xml::mapping::numericnode::new()","xml::mapping::objectnode::new()","xml::mapping::singleattributenode::new()","xml::mapping::subobjectbasenode::new()","xml::mapping::textnode::new()","xml::xxpath::new()","xml::xxpath::accessors::attribute::new()","xml::xxpath::accessors::attribute::new()","xml::mapping::choicenode#obj_initializing()","xml::mapping::node#obj_initializing()","xml::mapping::choicenode#obj_to_xml()","xml::mapping::node#obj_to_xml()","xml::mapping#post_load()","xml::mapping#post_save()","xml::mapping#pre_load()","xml::mapping#pre_save()","xml::mapping::classes_by_rootelt_names#remove_class()","xml::mapping::classmethods#root_element_name()","xml::mapping#save_to_file()","xml::mapping#save_to_xml()","xml::mapping::singleattributenode#set_attr_value()","numeric#text()","string#text()","xml::xxpath::accessors::attribute#text()","xml::xxpath::accessors::attribute#text=()","xml::xxpathmethods#to_xxpath()","xml::xxpath::accessors::unspecifiednesssupport#unspecified=()","xml::xxpath::accessors::unspecifiednesssupport#unspecified?()","xml::mapping::classmethods#use_mapping()","kernel#warn()","xml::mapping::classmethods#xml_mapping_nodes()","xml::mapping::choicenode#xml_to_obj()","xml::mapping::node#xml_to_obj()","","","","",""],"info":[["Kernel","","Kernel.html","","<p>unsuppress\n"],["Numeric","","Numeric.html","",""],["REXML","","REXML.html","",""],["REXML::Child","","REXML/Child.html","",""],["REXML::Element","","REXML/Element.html","",""],["REXML::Parent","","REXML/Parent.html","",""],["String","","String.html","",""],["XML","","XML.html","","<p>xml-mapping – bidirectional Ruby-XML mapper\n\n<pre>Copyright (C) 2004,2005 Olaf Klischat</pre>\n<p>xml-mapping – bidirectional …\n"],["XML::Mapping","","XML/Mapping.html","","<p>This is the central interface module of the xml-mapping library.\n<p>Including this module in your classes …\n"],["XML::Mapping::ArrayNode","","XML/Mapping/ArrayNode.html","","<p>Node factory function synopsis:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">array_node</span> :<span class=\"ruby-identifier\">_attrname_</span>, <span class=\"ruby-identifier\">_per_arrelement_path_</span>\n                  [, :<span class=\"ruby-identifier\">default_value=</span><span class=\"ruby-operator\">&gt;</span><span class=\"ruby-identifier\">_obj_</span>] <span class=\"ruby-operator\">...</span>\n</pre>\n"],["XML::Mapping::BooleanNode","","XML/Mapping/BooleanNode.html","","<p>Node factory function synopsis:\n\n<pre>boolean_node :_attrname_, _path_,\n             _true_value_, _false_value_ ...</pre>\n"],["XML::Mapping::ChoiceNode","","XML/Mapping/ChoiceNode.html","",""],["XML::Mapping::ClassMethods","","XML/Mapping/ClassMethods.html","","<p>The instance methods of this module are automatically added as class\nmethods to a class that includes …\n"],["XML::Mapping::Classes_by_rootelt_names","","XML/Mapping/Classes_by_rootelt_names.html","",""],["XML::Mapping::HashNode","","XML/Mapping/HashNode.html","","<p>Node factory function synopsis:\n\n<pre>hash_node :_attrname_, _per_hashelement_path_, _key_path_\n            ...</pre>\n"],["XML::Mapping::Node","","XML/Mapping/Node.html","","<p>Abstract base class for all node types. As mentioned in the documentation\nfor XML::Mapping, node types …\n"],["XML::Mapping::NumericNode","","XML/Mapping/NumericNode.html","","<p>Node factory function synopsis:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">numeric_node</span> :<span class=\"ruby-identifier\">_attrname_</span>, <span class=\"ruby-identifier\">_path_</span> [, :<span class=\"ruby-identifier\">default_value=</span><span class=\"ruby-operator\">&gt;</span><span class=\"ruby-identifier\">_obj_</span>]\n           <span class=\"ruby-operator\">...</span>\n</pre>\n"],["XML::Mapping::ObjectNode","","XML/Mapping/ObjectNode.html","","<p>Node factory function synopsis:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">object_node</span> :<span class=\"ruby-identifier\">_attrname_</span>, <span class=\"ruby-identifier\">_path_</span> [, :<span class=\"ruby-identifier\">default_value=</span><span class=\"ruby-operator\">&gt;</span><span class=\"ruby-identifier\">_obj_</span>]\n            <span class=\"ruby-operator\">...</span>\n</pre>\n"],["XML::Mapping::SingleAttributeNode","","XML/Mapping/SingleAttributeNode.html","","<p>Base class for node types that map some XML data to a single attribute of\ntheir mapping class.\n<p>All node …\n"],["XML::Mapping::SingleAttributeNode::NoAttrValueSet","","XML/Mapping/SingleAttributeNode/NoAttrValueSet.html","","<p>Exception that may be used by implementations of #extract_attr_value to\nannounce that the attribute value …\n"],["XML::Mapping::SubObjectBaseNode","","XML/Mapping/SubObjectBaseNode.html","","<p>(does somebody have a better name for this class?) base node class that\nprovides an initializer which …\n"],["XML::Mapping::TextNode","","XML/Mapping/TextNode.html","","<p>Node factory function synopsis:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">text_node</span> :<span class=\"ruby-identifier\">_attrname_</span>, <span class=\"ruby-identifier\">_path_</span> [, :<span class=\"ruby-identifier\">default_value=</span><span class=\"ruby-operator\">&gt;</span><span class=\"ruby-identifier\">_obj_</span>]\n              <span class=\"ruby-operator\">...</span>\n</pre>\n"],["XML::MappingError","","XML/MappingError.html","",""],["XML::XXPath","","XML/XXPath.html","","<p>Instances of this class hold (in a pre-compiled form) an XPath pattern. You\ncall instance methods like …\n"],["XML::XXPath::Accessors","","XML/XXPath/Accessors.html","",""],["XML::XXPath::Accessors::Attribute","","XML/XXPath/Accessors/Attribute.html","","<p>attribute node, more or less call-compatible with REXML&#39;s Element. \nREXML&#39;s Attribute class doesn&#39;t …\n"],["XML::XXPath::Accessors::REXML","","XML/XXPath/Accessors/REXML.html","",""],["XML::XXPath::Accessors::UnspecifiednessSupport","","XML/XXPath/Accessors/UnspecifiednessSupport.html","","<p>we need a boolean “unspecified?” attribute for XML nodes – paths like “*”\noder (somewhen) …\n"],["XML::XXPath::XML","","XML/XXPath/XML.html","",""],["XML::XXPath::XML::XXPath","","XML/XXPath/XML/XXPath.html","",""],["XML::XXPath::XML::XXPath::REXML","","XML/XXPath/XML/XXPath/REXML.html","",""],["XML::XXPath::XML::XXPath::REXML::Text","","XML/XXPath/XML/XXPath/REXML/Text.html","",""],["XML::XXPathError","","XML/XXPathError.html","",""],["XML::XXPathMethods","","XML/XXPathMethods.html","","<p>set of convenience wrappers around XML::XPath&#39;s instance methods, for\npeople who frequently use  …\n"],["==","XML::XXPath::Accessors::Attribute","XML/XXPath/Accessors/Attribute.html#method-i-3D-3D","(other)",""],["add_accessor","XML::Mapping::ClassMethods","XML/Mapping/ClassMethods.html#method-i-add_accessor","(name)","<p>Add getter and setter methods for a new attribute named <em>name</em> (must\nbe a symbol or a string) to this class, …\n"],["add_node_class","XML::Mapping","XML/Mapping.html#method-c-add_node_class","(c)","<p>Registers the new node class <em>c</em> (must be a descendant of Node) with\nthe xml-mapping framework.\n<p>A new “factory …\n"],["all","XML::XXPath","XML/XXPath.html#method-i-all","(node,options={})","<p>Return an Enumerable with all sub-nodes of <em>node</em> that match this\nXPath. Returns an empty Enumerable if …\n"],["all_xml_mapping_nodes","XML::Mapping::ClassMethods","XML/Mapping/ClassMethods.html#method-i-all_xml_mapping_nodes","(options={:mapping=>nil,:create=>true})","<p>enumeration of all nodes in effect when marshalling/unmarshalling this\nclass, that is, nodes defined …\n"],["all_xpath","XML::XXPathMethods","XML/XXPathMethods.html#method-i-all_xpath","(path,options={})","<p>see XML::XXPath#all\n"],["append_features","XML::XXPath::Accessors::UnspecifiednessSupport","XML/XXPath/Accessors/UnspecifiednessSupport.html#method-c-append_features","(base)",""],["class_and_mapping_for_root_elt_name","XML::Mapping","XML/Mapping.html#method-c-class_and_mapping_for_root_elt_name","(name)","<p>Finds a mapping class and mapping name corresponding to the given XML root\nelement name. There may be …\n"],["class_for_root_elt_name","XML::Mapping","XML/Mapping.html#method-c-class_for_root_elt_name","(name, options={:mapping=>:_default})","<p>Finds a mapping class corresponding to the given XML root element name and\nmapping name. There may be …\n"],["classes_for","XML::Mapping::Classes_by_rootelt_names","XML/Mapping/Classes_by_rootelt_names.html#method-i-classes_for","(rootelt_name, mapping)",""],["create_classes_for","XML::Mapping::Classes_by_rootelt_names","XML/Mapping/Classes_by_rootelt_names.html#method-i-create_classes_for","(rootelt_name, mapping)",""],["create_new","XML::XXPath","XML/XXPath.html#method-i-create_new","(base_node)","<p>create a completely new match of this XPath in <em>base_node</em>.\n“Completely new” means that a new …\n"],["create_new_xpath","XML::XXPathMethods","XML/XXPathMethods.html#method-i-create_new_xpath","(path)","<p>see XML::XXPath#create_new\n"],["default_mapping","XML::Mapping::ClassMethods","XML/Mapping/ClassMethods.html#method-i-default_mapping","()","<p>return the current default mapping (:_default initially, or the value set\nwith the latest call to use_mapping …\n"],["default_root_element_name","XML::Mapping::ClassMethods","XML/Mapping/ClassMethods.html#method-i-default_root_element_name","()","<p>The default root element name for this class. Equals the class name, with\nall parent module names stripped, …\n"],["default_when_xpath_err","XML::Mapping::SingleAttributeNode","XML/Mapping/SingleAttributeNode.html#method-i-default_when_xpath_err","()","<p>utility method to be used by implementations of #extract_attr_value. Calls\nthe supplied block, catching …\n"],["each","XML::XXPath","XML/XXPath.html#method-i-each","(node,options={},&block)","<p>loop over all sub-nodes of <em>node</em> that match this XPath.\n"],["each_on_axis","REXML::Parent","REXML/Parent.html#method-i-each_on_axis","(axis, &block)",""],["each_on_axis_child","REXML::Parent","REXML/Parent.html#method-i-each_on_axis_child","()",""],["each_on_axis_descendant","REXML::Parent","REXML/Parent.html#method-i-each_on_axis_descendant","(&block)",""],["each_on_axis_self","REXML::Parent","REXML/Parent.html#method-i-each_on_axis_self","()",""],["each_xpath","XML::XXPathMethods","XML/XXPathMethods.html#method-i-each_xpath","(path,options={},&block)","<p>see XML::XXPath#each\n"],["ensure_exists","XML::Mapping::Classes_by_rootelt_names","XML/Mapping/Classes_by_rootelt_names.html#method-i-ensure_exists","(rootelt_name, mapping, clazz)",""],["extract_attr_value","XML::Mapping::SingleAttributeNode","XML/Mapping/SingleAttributeNode.html#method-i-extract_attr_value","(xml)","<p>(to be overridden by subclasses) Extract and return the value of the\nattribute this node is responsible …\n"],["fill_from_xml","XML::Mapping","XML/Mapping.html#method-i-fill_from_xml","(xml, options={:mapping=>:_default})","<p>“fill” the contents of <em>xml</em> into <em>self</em>. <em>xml</em> is a\nREXML::Element.\n<p>First, pre_load(<em>xml</em>) is called, …\n"],["fill_into_xml","Numeric","Numeric.html#method-i-fill_into_xml","(xml, options={:mapping=>:_default})",""],["fill_into_xml","String","String.html#method-i-fill_into_xml","(xml, options={:mapping=>:_default})",""],["fill_into_xml","XML::Mapping","XML/Mapping.html#method-i-fill_into_xml","(xml, options={:mapping=>:_default})","<p>Fill <em>self</em>&#39;s state into the xml node (REXML::Element)\n<em>xml</em>. All the nodes for this object&#39;s class …\n"],["first","XML::XXPath","XML/XXPath.html#method-i-first","(node,options={})","<p>the first sub-node of <em>node</em> that matches this XPath. If nothing\nmatches, raise XXPathError unless :allow_nil=&gt;true …\n"],["first_xpath","XML::XXPathMethods","XML/XXPathMethods.html#method-i-first_xpath","(path,options={})","<p>see XML::XXPath#first\n"],["initialize_impl","XML::Mapping::SingleAttributeNode","XML/Mapping/SingleAttributeNode.html#method-i-initialize_impl","(*args)","<p>this method was retained for compatibility with xml-mapping 0.8.\n<p>It used to be the initializer to be implemented …\n"],["initialize_xml_mapping","XML::Mapping","XML/Mapping.html#method-i-initialize_xml_mapping","(options={:mapping=>nil})","<p>Xml-mapping-specific initializer.\n<p>This will be called when a new instance is being initialized from an …\n"],["is_present_in?","XML::Mapping::ChoiceNode","XML/Mapping/ChoiceNode.html#method-i-is_present_in-3F","(obj)","<p>(overridden) true if at least one of our nodes is_present_in? obj.\n"],["is_present_in?","XML::Mapping::Node","XML/Mapping/Node.html#method-i-is_present_in-3F","(obj)","<p>tell whether this node&#39;s data is present in <em>obj</em> (when this\nmethod is called, <em>obj</em> will be an instance …\n"],["is_present_in?","XML::Mapping::SingleAttributeNode","XML/Mapping/SingleAttributeNode.html#method-i-is_present_in-3F","(obj)","<p>(overridden) returns true if and only if the value of this node&#39;s\nattribute in <em>obj</em> is non-nil.\n"],["load_from_file","XML::Mapping::ClassMethods","XML/Mapping/ClassMethods.html#method-i-load_from_file","(filename, options={:mapping=>:_default})","<p>Create a new instance of this class from the XML contained in the file\nnamed <em>filename</em>. Calls load_from_xml …\n"],["load_from_xml","Numeric","Numeric.html#method-c-load_from_xml","(xml, options={:mapping=>:_default})",""],["load_from_xml","String","String.html#method-c-load_from_xml","(xml, options={:mapping=>:_default})",""],["load_from_xml","XML::Mapping::ClassMethods","XML/Mapping/ClassMethods.html#method-i-load_from_xml","(xml, options={:mapping=>:_default})","<p>Create a new instance of this class from the XML contained in <em>xml</em>\n(a REXML::Element).\n<p>Allocates a new …\n"],["load_object_from_file","XML::Mapping","XML/Mapping.html#method-c-load_object_from_file","(filename,options={:mapping=>nil})","<p>Like load_object_from_xml, but loads from the XML file named by\n<em>filename</em>.\n"],["load_object_from_xml","XML::Mapping","XML/Mapping.html#method-c-load_object_from_xml","(xml,options={:mapping=>nil})","<p>“polymorphic” load function. Turns the XML tree <em>xml</em> into an\nobject, which is returned. The …\n"],["new","XML::Mapping","XML/Mapping.html#method-c-new","(*args)","<p>Initializer. Called (by Class#new) after <em>self</em> was created using\n<em>new</em>.\n<p>XML::Mapping&#39;s implementation …\n"],["new","XML::Mapping::ArrayNode","XML/Mapping/ArrayNode.html#method-c-new","(*args)","<p>Initializer. Called with keyword arguments and either 1 or 2 paths; the\nhindmost path argument passed …\n"],["new","XML::Mapping::BooleanNode","XML/Mapping/BooleanNode.html#method-c-new","(*args)","<p>Initializer.\n"],["new","XML::Mapping::ChoiceNode","XML/Mapping/ChoiceNode.html#method-c-new","(*args)",""],["new","XML::Mapping::HashNode","XML/Mapping/HashNode.html#method-c-new","(*args)","<p>Initializer. Called with keyword arguments and either 2 or 3 paths; the\nhindmost path argument passed …\n"],["new","XML::Mapping::Node","XML/Mapping/Node.html#method-c-new","(owner,*args)","<p>Intializer, to be called from descendant classes. <em>owner</em> is the\nmapping class this node is being defined …\n"],["new","XML::Mapping::NumericNode","XML/Mapping/NumericNode.html#method-c-new","(*args)",""],["new","XML::Mapping::ObjectNode","XML/Mapping/ObjectNode.html#method-c-new","(*args)","<p>Initializer. <em>path</em> (a string denoting an XPath expression) is the\nlocation of the subtree.\n"],["new","XML::Mapping::SingleAttributeNode","XML/Mapping/SingleAttributeNode.html#method-c-new","(*args)","<p>Initializer. <em>owner</em> is the owning mapping class (gets passed to the\nsuperclass initializer and therefore …\n"],["new","XML::Mapping::SubObjectBaseNode","XML/Mapping/SubObjectBaseNode.html#method-c-new","(*args)","<p>processes the keyword arguments :class, :marshaller, and :unmarshaller\n(<em>args</em> is ignored). When this initiaizer …\n"],["new","XML::Mapping::TextNode","XML/Mapping/TextNode.html#method-c-new","(*args)",""],["new","XML::XXPath","XML/XXPath.html#method-c-new","(xpathstr)","<p>create and compile a new XPath. <em>xpathstr</em> is the string\nrepresentation (XPath pattern) of the path\n"],["new","XML::XXPath::Accessors::Attribute","XML/XXPath/Accessors/Attribute.html#method-c-new","(parent,name)",""],["new","XML::XXPath::Accessors::Attribute","XML/XXPath/Accessors/Attribute.html#method-c-new","(parent,name,create)",""],["obj_initializing","XML::Mapping::ChoiceNode","XML/Mapping/ChoiceNode.html#method-i-obj_initializing","(obj,mapping)",""],["obj_initializing","XML::Mapping::Node","XML/Mapping/Node.html#method-i-obj_initializing","(obj,mapping)","<p>Called when a new instance of the mapping class this node belongs to is\nbeing initialized. <em>obj</em> is the …\n"],["obj_to_xml","XML::Mapping::ChoiceNode","XML/Mapping/ChoiceNode.html#method-i-obj_to_xml","(obj,xml)",""],["obj_to_xml","XML::Mapping::Node","XML/Mapping/Node.html#method-i-obj_to_xml","(obj,xml)",""],["post_load","XML::Mapping","XML/Mapping.html#method-i-post_load","(options={:mapping=>:_default})","<p>This method is called immediately after <em>self</em> has been filled from\nan xml source. If you have things to …\n"],["post_save","XML::Mapping","XML/Mapping.html#method-i-post_save","(xml, options={:mapping=>:_default})","<p>This method is called immediately after <em>self</em>&#39;s state has been\nfilled into an XML element.\n<p>The default …\n"],["pre_load","XML::Mapping","XML/Mapping.html#method-i-pre_load","(xml, options={:mapping=>:_default})","<p>This method is called immediately before <em>self</em> is filled from an\nxml source. <em>xml</em> is the source REXML::Element …\n"],["pre_save","XML::Mapping","XML/Mapping.html#method-i-pre_save","(options={:mapping=>:_default})","<p>This method is called when <em>self</em> is to be converted to an XML tree.\nIt <strong>must</strong> create and return an XML element …\n"],["remove_class","XML::Mapping::Classes_by_rootelt_names","XML/Mapping/Classes_by_rootelt_names.html#method-i-remove_class","(rootelt_name, mapping, clazz)",""],["root_element_name","XML::Mapping::ClassMethods","XML/Mapping/ClassMethods.html#method-i-root_element_name","(name=nil, options={:mapping=>@default_mapping})","<p>The “root element name” of this class (combined getter/setter method).\n<p>The root element name …\n"],["save_to_file","XML::Mapping","XML/Mapping.html#method-i-save_to_file","(filename, options={:mapping=>:_default})","<p>Save <em>self</em>&#39;s state as XML into the file named\n<em>filename</em>. The XML is obtained by calling #save_to_xml …\n"],["save_to_xml","XML::Mapping","XML/Mapping.html#method-i-save_to_xml","(options={:mapping=>:_default})","<p>Fill <em>self</em>&#39;s state into a new xml node, return that node.\n<p>This method calls #pre_save, then #fill_into_xml …\n"],["set_attr_value","XML::Mapping::SingleAttributeNode","XML/Mapping/SingleAttributeNode.html#method-i-set_attr_value","(xml, value)","<p>(to be overridden by subclasses) Write <em>value</em>, which is the current\nvalue of the attribute this node is …\n"],["text","Numeric","Numeric.html#method-i-text","()",""],["text","String","String.html#method-i-text","()",""],["text","XML::XXPath::Accessors::Attribute","XML/XXPath/Accessors/Attribute.html#method-i-text","()","<p>the value of the attribute.\n"],["text=","XML::XXPath::Accessors::Attribute","XML/XXPath/Accessors/Attribute.html#method-i-text-3D","(x)",""],["to_xxpath","XML::XXPathMethods","XML/XXPathMethods.html#method-i-to_xxpath","(path)",""],["unspecified=","XML::XXPath::Accessors::UnspecifiednessSupport","XML/XXPath/Accessors/UnspecifiednessSupport.html#method-i-unspecified-3D","(x)",""],["unspecified?","XML::XXPath::Accessors::UnspecifiednessSupport","XML/XXPath/Accessors/UnspecifiednessSupport.html#method-i-unspecified-3F","()",""],["use_mapping","XML::Mapping::ClassMethods","XML/Mapping/ClassMethods.html#method-i-use_mapping","(mapping)","<p>Make <em>mapping</em> the mapping to be used by default in future node\ndeclarations in this class. The default …\n"],["warn","Kernel","Kernel.html#method-i-warn","(msg)",""],["xml_mapping_nodes","XML::Mapping::ClassMethods","XML/Mapping/ClassMethods.html#method-i-xml_mapping_nodes","(options={:mapping=>nil,:create=>true})","<p>array of all nodes defined in this class, in the order of their definition.\nOption :create specifies …\n"],["xml_to_obj","XML::Mapping::ChoiceNode","XML/Mapping/ChoiceNode.html#method-i-xml_to_obj","(obj,xml)",""],["xml_to_obj","XML::Mapping::Node","XML/Mapping/Node.html#method-i-xml_to_obj","(obj,xml)",""],["README","","README_md.html","","<p>XML-MAPPING: XML-to-object (and back) Mapper for Ruby, including XPath Interpreter\n<p>Xml-mapping is an easy …\n"],["TODO","","TODO_txt.html","","<p>XML::XXPath: Write a real XPath parser eventually\n<p>XML::XXPath: avoid duplicates in path.all(node) result …\n"],["xpath_impl_notes","","doc/xpath_impl_notes_txt.html","","<p>latest design (12/2004)\n<p>At the lowest level, the “Accessors” sub-module contains reader and …\n"],["user_manual","","user_manual_md.html","","<p>XML-MAPPING: XML-to-object (and back) Mapper for Ruby, including XPath Interpreter\n<p>Xml-mapping is an easy …\n"],["user_manual_xxpath","","user_manual_xxpath_md.html","","<p>XML-XXPATH\n<p>Overview, Motivation\n<p>Xml-xxpath is an (incomplete) XPath interpreter that is at the\nmoment\nbundled ...\n"]]}}